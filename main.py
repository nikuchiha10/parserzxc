#!/usr/bin/env python3
"""
PRO Knowledge Parser - –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
"""

import argparse
import sys
import os
from telegram_bot import KnowledgeParserBot
from core.advanced_parser import AdvancedKnowledgeParser
from core.article_manager import ArticleManager
from config import config

def run_parser_demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞"""
    print("üöÄ PRO Knowledge Parser - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–µ–∂–∏–º")
    print("=" * 50)
    
    parser = AdvancedKnowledgeParser()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    test_articles = [
        "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç/—ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è–º-–Ω–µ–ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞–º",
        "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–∞–¥—Ä–µ—Å, —Ç–µ–ª–µ—Ñ–æ–Ω, —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã)",
        "–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∏—Å—å–º–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π"
    ]
    
    try:
        print("üéØ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π...")
        results = parser.parse_articles_batch(test_articles, max_articles=2)
        
        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {results['success']}")
        print(f"‚ùå –û—à–∏–±–∫–∏: {results['failed']}")
        print(f"‚è±Ô∏è –í—Ä–µ–º—è: {results['total_time']:.2f} —Å–µ–∫")
        
        if results['success'] > 0:
            print("üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ data/")
            print("üìä –î–æ—Å—Ç—É–ø–µ–Ω —ç–∫—Å–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        parser.close()

def run_telegram_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ PRO Telegram –±–æ—Ç–∞...")
    bot = KnowledgeParserBot()
    bot.run()

def show_system_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"""
    print("üñ•Ô∏è PRO Knowledge Parser - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        import selenium
        import pandas
        import aiohttp
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   ‚Ä¢ –ë–∞–∑–∞ URL: {config.BASE_URL}")
    print(f"   ‚Ä¢ –î–∞–Ω–Ω—ã–µ: {config.DATA_DIR}")
    print(f"   ‚Ä¢ –õ–æ–≥–∏: {config.LOGS_DIR}")
    print(f"   ‚Ä¢ –ú–∞–∫—Å. —Å—Ç–∞—Ç–µ–π: {config.MAX_ARTICLES_PER_RUN}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    manager = ArticleManager(config.DATA_DIR)
    stats = manager.get_stats()
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {stats['total_articles']} —Å—Ç–∞—Ç–µ–π")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    parser = argparse.ArgumentParser(description='PRO Knowledge Parser')
    parser.add_argument('--mode', choices=['bot', 'parser', 'info'], default='info',
                       help='–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: bot - Telegram –±–æ—Ç, parser - –¥–µ–º–æ –ø–∞—Ä—Å–µ—Ä–∞, info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ')
    parser.add_argument('--articles', type=int, default=3,
                       help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∂–∏–º–∞ parser)')
    
    args = parser.parse_args()
    
    if args.mode == 'bot':
        run_telegram_bot()
    elif args.mode == 'parser':
        run_parser_demo()
    else:
        show_system_info()

if __name__ == "__main__":
    main()
