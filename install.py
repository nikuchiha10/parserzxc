#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PRO Knowledge Parser
"""

import os
import sys
import subprocess
import platform

def run_command(command, check=True):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ shell"""
    print(f"üõ†Ô∏è –í—ã–ø–æ–ª–Ω—è—é: {command}")
    try:
        result = subprocess.run(command, shell=True, check=check, capture_output=True, text=True)
        return result.returncode == 0
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip
    run_command("pip install --upgrade pip")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if run_command("pip install -r requirements.txt"):
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        return False

def setup_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    print("üìÅ –°–æ–∑–¥–∞—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    
    directories = ['data', 'logs', 'backups', 'core']
    
    for directory in directories:
        os.makedirs(directory, exist_ok=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")
    
    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–∞")

def check_chrome_driver():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Chrome Driver"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é Chrome Driver...")
    
    system = platform.system().lower()
    
    if system == "linux":
        # –î–ª—è Ubuntu/Debian
        if run_command("which google-chrome", check=False):
            print("‚úÖ Chrome —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ö†Ô∏è Chrome –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:")
            print("  sudo apt update && sudo apt install google-chrome-stable")
    
    elif system == "windows":
        print("‚úÖ Windows - Chrome Driver –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    
    elif system == "darwin":  # macOS
        if run_command("which google-chrome", check=False):
            print("‚úÖ Chrome —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Chrome —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞")
    
    return True

def create_env_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    if not os.path.exists('.env'):
        print("üîß –°–æ–∑–¥–∞—é —Ñ–∞–π–ª .env...")
        
        env_content = """# PRO Knowledge Parser Configuration

# Telegram Bot
TELEGRAM_TOKEN=7220498387:AAEPlB9BLtTdmzUtRoD2pXhsoB3UzsnoMzE

# Website Auth (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
KMS_USERNAME=your_username
KMS_PASSWORD=your_password

# Parser Settings
MAX_ARTICLES_PER_RUN=50
REQUEST_DELAY=1
"""
        
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        
        print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üöÄ PRO Knowledge Parser - –£—Å—Ç–∞–Ω–æ–≤–∫–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤–µ—Ä—Å–∏—é
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)
    
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
    print(f"‚úÖ –û–°: {platform.system()} {platform.release()}")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    setup_directories()
    
    if not install_dependencies():
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫")
        sys.exit(1)
    
    check_chrome_driver()
    create_env_file()
    
    print("\nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìö –î–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:")
    print("1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py --mode bot")
    print("3. –ò–ª–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–∞—Ä—Å–µ—Ä: python main.py --mode parser")
    print("4. –î–ª—è —Å–ø—Ä–∞–≤–∫–∏: python main.py --help")

if __name__ == "__main__":
    main()
